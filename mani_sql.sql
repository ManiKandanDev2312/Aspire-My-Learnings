CREATE TABLE EMPLOYEE(
EMP_ID INT NOT NULL PRIMARY KEY,
EMP_NAME VARCHAR(200) NOT NULL,
EMP_DOJ DATE NOT NULL,
EMP_DEG VARCHAR(200) NOT NULL,
EMP_SALARY INT NOT NULL,
DEPT_ID INT NOT NULL ,
EMP_LOCATION VARCHAR(100) NOT NULL,
FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENT (DEPT_ID)
);
ALTER TABLE EMPLOYEE ADD FOREIGN KEY (EMP_NAME) REFERENCES PROJECT_TABLES (EMP_NAME);

CREATE TABLE DEPARTMENT(
DEPT_ID INT NOT NULL PRIMARY KEY,
DEPT_NAME VARCHAR(200) NOT NULL,
TOTAL_COUNT INT NOT NULL
);

CREATE TABLE PROJECT_TABLES(
PROJ_ID INT NOT NULL PRIMARY KEY,
PROJ_NAME VARCHAR(200) NOT NULL,
EMP_NAME VARCHAR(200) NOT NULL
);

DROP TABLE PROJECT_TABLES;

INSERT INTO EMPLOYEE VALUE (105,'ARUN','2022-05-03','CLOUD',50000,204,'SALEM');

INSERT INTO DEPARTMENT VALUE(204,'CLOUD',0);

INSERT INTO PROJECT_TABLES VALUE(301,'SWIGGY','MANI'),(302,'EV','JEEVA'),(303,'GMAP','MANI'),(304,'TICKETBOOKING','JEEVA');

SELECT * FROM PROJECT_TABLES;
-- BASIC QUERY

-- QUERY 1
SELECT * FROM EMPLOYEE;

-- QUERY 2
SELECT EMP_NAME,EMP_SALARY FROM EMPLOYEE;

-- QUERY 3
SELECT * FROM EMPLOYEE WHERE EMP_SALARY > 50000;

-- QUERY 4
SELECT * FROM EMPLOYEE WHERE YEAR(EMP_DOJ) = 2020;

-- QUERY 5
SELECT * FROM EMPLOYEE WHERE EMP_NAME LIKE 'A%';

-- AGGREGATE FUNCTIONS

-- QUERY 1

SELECT AVG(EMP_SALARY) AS AVAERAGE_SALARY FROM EMPLOYEE;

-- QUERY 2
SELECT COUNT(EMP_ID) AS EMPLOYEE_COUNT FROM EMPLOYEE;

-- QUERY 3
SELECT MAX(EMP_SALARY) AS HIGI_SALARY FROM EMPLOYEE;

-- QUERY 4
SELECT SUM(EMP_SALARY) AS TOTAL_PAID_SALARY FROM EMPLOYEE;

-- QUERY 5

SELECT COUNT(EMP_ID) AS EMP_COUNT FROM EMPLOYEE GROUP BY EMP_DEG;

-- JOINS

-- QUERY 1
SELECT EMPLOYEE.EMP_NAME AS EMP_NAME , DEPARTMENT.DEPT_NAME AS DEPT_NAME FROM EMPLOYEE JOIN DEPARTMENT WHERE EMPLOYEE.DEPT_ID = DEPARTMENT.DEPT_ID;

-- QUERY 2

-- QUERY 3

SELECT DISTINCT EMPLOYEE.EMP_NAME AS EMP_NAME FROM EMPLOYEE JOIN PROJECT_TABLES WHERE EMPLOYEE.EMP_NAME = ANY( SELECT EMP_NAME FROM PROJECT_TABLES GROUP BY EMP_NAME HAVING COUNT(PROJECT_TABLES.EMP_NAME) > 1); 

SELECT PROJECT_TABLES.EMP_NAME AS EMP_NAME FROM EMPLOYEE JOIN PROJECT_TABLES GROUP BY PROJECT_TABLES.EMP_NAME HAVING COUNT(PROJECT_TABLES.EMP_NAME) > 1; 



-- QUERY 4

SELECT EMPLOYEE.EMP_NAME, PROJECT_TABLES.PROJ_NAME FROM EMPLOYEE JOIN PROJECT_TABLES WHERE EMPLOYEE.EMP_NAME = PROJECT_TABLES.EMP_NAME;

-- QUERY 5







-- PLSQL

-- Query 1

DELIMITER $$

CREATE FUNCTION FACTORIAL(INPUT INT) RETURNS INT
DETERMINISTIC
BEGIN
DECLARE NUMBER1 INT;
DECLARE TEMP INT;

SET TEMP := 1;
WHILE TEMP <= INPUT DO
SET NUMBER1 := NUMBER1 * TEMP;

SET TEMP := TEMP + 1;
END WHILE;
RETURN NUMBER1;
END $$
DELIMITER ;

DROP FUNCTION FACTORIAL;

SELECT FACTORIAL(5);



-- QUERY 4
DELIMITER $$
CREATE FUNCTION PRIMEORNOT(INPUT INT) RETURNS VARCHAR(100)
DETERMINISTIC
BEGIN
DECLARE COUNT INT;
DECLARE TEMP INT;
DECLARE RESULT VARCHAR(100);
SET COUNT := 0;
SET TEMP :=2;
WHILE TEMP <= INPUT DO
IF INPUT MOD TEMP = 0 THEN
SET COUNT := COUNT+1;
END IF ;

SET TEMP := TEMP+1;
END WHILE ;

IF COUNT = 1 THEN 
SET RESULT := 'YES IT IS PRIME NUMBER';
ELSE 
SET RESULT := 'IT IS NOT A PRIME NUMBER';

END IF;

RETURN RESULT;

END $$

DELIMITER ;

DROP FUNCTION PRIMEORNOT;

SELECT PRIMEORNOT(14);

-- QUERY 5

DELIMITER $$

CREATE FUNCTION SUMOFDIGITS(INPUT INT) RETURNS INT
DETERMINISTIC
BEGIN 
DECLARE RESULT INT;
DECLARE LDIGIT INT;
SET RESULT := 0;
WHILE INPUT > 0 DO
SET LDIGIT := INPUT MOD 10;
SET RESULT := RESULT + LDIGIT;
SET INPUT := FLOOR(INPUT /10);

END WHILE;
RETURN RESULT;

END $$
DELIMITER ;
DROP FUNCTION SUMOFDIGITS;
SELECT SUMOFDIGITS(74329657) AS SUMOFDIGIT;





-- DELIMITER $$

-- CREATE FUNCTION RECUREXA(INPUT INT) RETURNS INT
-- DETERMINISTIC

-- BEGIN 
-- DECLARE ITERATECOUNT INT;
-- DECLARE FACT INT;
-- SET ITERATECOUNT := 1;
-- SET FACT := 1;
-- IF ITERATECOUNT <= INPUT THEN
--  SET FACT := FACT * RECUREXA(INPUT-1);
-- END IF;

-- RETURN FACT;
-- END $$
-- DELIMITER ;
-- DROP FUNCTION RECUREXA;

-- SELECT RECUREXA(5);
